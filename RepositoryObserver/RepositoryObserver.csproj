<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <AssemblyName>RepositoryObserver</AssemblyName>
    <RootNamespace>RepositoryObserver</RootNamespace>
  </PropertyGroup>
  <ItemGroup><!--    <PackageReference Include="AspNet.Security.OAuth.GitHub" Version="2.0.1" />-->
<!--    <PackageReference Include="Microsoft.AspNetCore.App" />-->
<!--    <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.2.0" />-->
<!--    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />-->
    <!-- <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.0.0-preview.19074.2" />-->
    <!-- <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="3.0.0-preview.19074.2" />-->
<!--    <PackageReference Include="MongoDB.Driver" Version="2.7.3" />-->
<!--    <PackageReference Include="NSwag.AspNetCore" Version="13.1.3" />-->
<!--    <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="13.1.3" />-->
<!--    <PackageReference Include="Octokit" Version="0.32.0" />-->
<!--    <PackageReference Include="PayPal" Version="2.0.0-rc2" />-->
<!--    <PackageReference Include="Serilog" Version="2.8.0" />-->
<!--    <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />-->
<!--    <PackageReference Include="Serilog.Settings.AppSettings" Version="2.2.2" />-->
<!--    <PackageReference Include="Serilog.Settings.Configuration" Version="2.6.1" />-->
<!--    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />-->
<!--    <PackageReference Include="Serilog.Sinks.File" Version="3.1.1" />-->
<!--    <PackageReference Include="Serilog.Sinks.RollingFile" Version="3.1.0" />-->
<!--    <PackageReference Include="Serilog.Sinks.MongoDB" Version="3.1.0" />-->
<!--    <PackageReference Include="Twilio" Version="5.29.0" />-->
  
    
    
    
<!--    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.1" />-->
  
<!--    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="5.0.0" />-->
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="AspNet.Security.OAuth.GitHub" Version="3.1.7" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.16" />
    <PackageReference Include="MongoDB.Driver" Version="2.12.4" />
  
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
  
    <PackageReference Include="NSwag.AspNetCore" Version="13.11.3" />
  
    <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="13.11.3" />
  
    <PackageReference Include="Octokit" Version="0.50.0" />
  
    <PackageReference Include="PayPal" Version="2.0.0-rc2" />
  
    <PackageReference Include="Serilog.Settings.AppSettings" Version="2.2.2" />
  
    <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
  
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
  
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
  
    <PackageReference Include="Twilio" Version="5.63.0" />
  </ItemGroup>
  <ItemGroup>
    <Content Remove="$(SpaRoot)**" />
    <Content Include="ClientApp\server.js" />
    <Content Include="ClientApp\src\app\add-notification\add-notification.component.css" />
    <Content Include="ClientApp\src\app\add-notification\add-notification.component.html" />
    <Content Include="ClientApp\src\app\add-notification\add-notification.component.spec.ts" />
    <Content Include="ClientApp\src\app\add-notification\add-notification.component.ts" />
    <Content Include="ClientApp\src\app\dto\repositoryTO.ts" />
    <Content Include="ClientApp\src\app\dto\userTO.ts" />
    <Content Include="ClientApp\src\app\notifications\notifications.component.css" />
    <Content Include="ClientApp\src\app\notifications\notifications.component.html" />
    <Content Include="ClientApp\src\app\notifications\notifications.component.spec.ts" />
    <Content Include="ClientApp\src\app\notifications\notifications.component.ts" />
    <Content Include="ClientApp\src\app\service\githubauth\githubauth.service.spec.ts" />
    <Content Include="ClientApp\src\app\service\githubauth\githubauth.service.ts" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="ClientApp\src\app\notifications\**" />
    <Content Remove="ClientApp\src\app\notifications\**" />
    <None Remove="ClientApp\src\app\add-notification\**" />
    <Content Remove="ClientApp\src\app\add-notification\**" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="ClientApp\src\app\dto\generated" />
    <Folder Include="ClientApp\src\app\service\settings" />
    <Folder Include="ClientApp\src\assets" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="ClientApp\src\app\notifications\**" />
    <Compile Remove="ClientApp\src\app\add-notification\**" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\src\app\notifications\**" />
    <EmbeddedResource Remove="ClientApp\src\app\add-notification\**" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\dto\jobTO.ts" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>